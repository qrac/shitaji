/*! ___pjtName___ v___pkgVersion___ ___pkgLicense___ by ___pkgAuthorName___ */

*,
::before,
::after {
  margin: 0;
  box-sizing: border-box;
  font-size: 1em;
  font-family: inherit;
  font-weight: inherit;
}

::before,
::after {
  vertical-align: inherit;
  text-decoration: inherit;
}

html {
  font-family: sans-serif;
  word-break: break-word;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: transparent;
}

header,
footer,
main,
section,
article,
aside,
nav,
details,
menu,
figure,
figcaption {
  display: block;
}

a {
  color: inherit;
  text-decoration: none;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

abbr[title] {
  text-decoration: underline dotted;
  -webkit-text-decoration: underline dotted;
}

sub,
sup {
  font-size: 75%;
}

ol,
ul {
  padding: 0;
  list-style: none;
}

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

canvas,
audio,
video {
  display: inline-block;
}

img,
svg,
iframe,
canvas,
audio,
video {
  vertical-align: middle;
}

img {
  border-style: none;
}

svg:not([fill]) {
  fill: currentColor;
}

svg:not(:root) {
  overflow: hidden;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

input {
  border-radius: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

[type="checkbox"],
[type="radio"] {
  padding: 0;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

address {
  font-style: normal;
}

textarea {
  overflow: auto;
  resize: vertical;
}

legend {
  display: table;
  max-width: 100%;
  padding: 0;
  color: inherit;
  white-space: normal;
}

table {
  border-collapse: collapse;
}

hr {
  height: 0;
  overflow: visible;
}

template {
  display: none;
}

a,
area,
button,
input,
label,
select,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

[hidden] {
  display: none;
}

[aria-busy="true"] {
  cursor: progress;
}

[aria-controls] {
  cursor: pointer;
}

[aria-disabled="true"],
[disabled] {
  cursor: not-allowed;
}

[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  display: inherit;
  position: absolute;
}
